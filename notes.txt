observer/subscriber thoughts:

model property 'bar' on 'foo' changed.
resolve 'bar' to some unambiguous id, get listeners and hand event to them

model ids are auto-generated.
So if we want the UI to display player attributes we might say:
on player attribute change -> update && render
where player is an object created and re-created at runtime
so we need to alias 'player model id' to 'player' whenever we (re)create player
location is a fixed reference to the current tile.
 it points at different tile objects at runtime
 we want to be able to have the UI render location and any changes
 so when location is updated (its an observable) it dispatches an event

location is a getter to tiles[current_position]
  tile property changes publish tile_id/contents:change
  switchboard looks up tile_id, discovers it is aliased as 'location' and re-broadcasts


bind referen
--
Layer masks in pixelmator: http://www.pxm-tuts.com/tutorials/tools/layer-masks/
Icons:

* Baddie icon for encounters and combat
  Icon.1_22.png
  Icon.1_28.png
  Icon.4_95.png

* Dead baddie
  Icon.2_51.png

* Hero icon: you
  Icon.1_80.png
  Icon.1_05.png
  Icon.2_67.png

* Hero death:
  Icon.4_63.png

* Weapon Attack icon
  Icon.5_46.png

* Magic attack
  Icon.5_97.png

* Select target icon:
  Icon.1_07.png

* Start battle
  Icon.3_64.png
  Icon.4_37.png

* Flee battle
  Icon.4_33.png

* Money/gold icon:
  Icons8_78.png

--
resources:

* player
  /:username
  properties like:
    role: "hero",
    speed: 150,
    hitPoints: 100,
    damage: 0,
    spriteSheet: "characters",
    spriteY: 0,
    animated: true,
    sound: {
      attack: "hero_attacks", // or is this a weapon property?
      hit: "ugh",
      reborn: "alive",
      dies: "dead"
    }
    weapons: [
      {id: "spear"}
    ],

* map
  /map
* region
  /map/:region
  -> { tiles: [], moduleid: 'regions/theplains' }
* tile
  /map/:region/:tile
* npc
  /:npcid
* item
  /:itemid
* world
  /:coords
  -> { region: { tiles: [], bounds: {type:'rect', pts: []} }}


place the player into the world, and the starting point
 - the player object
 - enough of the map to show the starting point
 - any objects associated with that pt/region
 - any encounter scripts or other region-logic
 - trigger enter the region
 - trigger enter the tile

the game loads the world location:
  it gets any game state, starts timers, and so on.
the game loads the player
  it gets any saved location, stats, inventory
the game loads the starting location
  it returns the region and the current tile
  (we can pass a coord and it resolves this )


NPC groups (beta/demo):

Rat infestation in house: 3 Huge Rats, 2 Giant Rats, 2 Mutant Rats: 15,15
Goblins in plains:
1. 3 Goblins, 1 Goblin Shaman: 8,22
2. 4 Goblins, 1 Goblin Shaman: 3,19
3. 5 Goblins, 1 Goblin Shaman, 1 Goblin Chieftain: 5,17
Trolls in pass:
1. 2 Juvenile Trolls, 2 Trolls: 4,5
2. 4 Trolls, 1 Troll Elder, 1 Troll Hulk: 4,2


Items (beta/demo):

11,21:
Description: You find a sizeable, strong-looking stick which you decide could be used for fighting
and might even store a small amount of Magical power.
Effect: You find a Stick
21,17:
Description: You find a sizeable, strong-looking stick which you decide could be used for fighting
and might even store a small amount of Magical power.
Effect: You find a Stick
4,11:
Description: You find a small Dagger lying on the ground along with the body of a young boy and
several Goblins.
Effect: You find a Dagger
18,8:
Description: You find a slightly rusted but servicable Sword washed up on the shores of a small
river.
Effect: You find a Sword


